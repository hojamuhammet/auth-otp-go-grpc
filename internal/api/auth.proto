syntax = "proto3";

package auth;

option go_package = "./gen";

// Define the User message that represents a registered user.
message User {
    int64 id = 1;
    string phone_number = 2;
}

// Request message to register a new user.
message RegisterUserRequest {
    string phone_number = 1;
}

// Response message for user registration.
message RegisterUserResponse {
    User user = 1;
    string jwt_token = 2;
}

// Request message to check if a phone number exists.
message CheckPhoneNumberRequest {
    string phone_number = 1;
}

// Response message for phone number existence check.
message CheckPhoneNumberResponse {
    bool exists = 1;
}

// Request message to generate an OTP for a user.
message GenerateOTPRequest {
    int64 user_id = 1;
    string phone_number = 2;
}

// Response message for OTP generation.
message GenerateOTPResponse {
    string otp = 1;
}

// Request message to verify an OTP for a user.
message VerifyOTPRequest {
    int64 user_id = 1;
    string phone_number = 2;
    string otp = 3;
}

// Response message for OTP verification.
message VerifyOTPResponse {
    bool valid = 1;
    string jwt_token = 2;
}

// Define the UserService service.
service UserService {
    // Register a new user with a phone number.
    rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

    // Check if a phone number exists.
    rpc CheckPhoneNumber(CheckPhoneNumberRequest) returns (CheckPhoneNumberResponse);

    // Generate an OTP for a user.
    rpc GenerateOTP(GenerateOTPRequest) returns (GenerateOTPResponse);

    // Verify an OTP and return a JWT token if valid.
    rpc VerifyOTP(VerifyOTPRequest) returns (VerifyOTPResponse);
}